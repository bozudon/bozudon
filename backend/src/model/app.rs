//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "app")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub created_at: DateTime,
    pub updated_at: DateTime,
    pub name: String,
    pub redirect_uri: String,
    pub scopes: String,
    pub website: Option<String>,
    pub client_id: String,
    pub client_secret: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::oauth_access_grant::Entity")]
    OauthAccessGrant,
    #[sea_orm(has_many = "super::oauth_access_token::Entity")]
    OauthAccessToken,
}

impl Related<super::oauth_access_grant::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::OauthAccessGrant.def()
    }
}

impl Related<super::oauth_access_token::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::OauthAccessToken.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
